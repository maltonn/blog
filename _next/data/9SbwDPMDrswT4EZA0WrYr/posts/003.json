{"pageProps":{"post":{"title":"学祭に向けて人数カウンタを作った話","date":"2023-11-18","slug":"003","content":"<h2 id=\"学祭に向けて人数カウンタを作った話\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#学祭に向けて人数カウンタを作った話\"><span class=\"icon icon-link\"></span></a>学祭に向けて人数カウンタを作った話</h2>\n<p>大阪大学の学祭実行委員会のMaltonです。<br>\nさて、弊委員会では毎年の学祭で来場者のカウントをする「カウント係」を入り口付近に配置していたのですが、自動化できないかという相談を受けたので、作ってみることにしました。</p>\n<h2 id=\"tldr\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#tldr\"><span class=\"icon icon-link\"></span></a>TL;DR</h2>\n<p>YoLo + BoTSORTでカメラ映像から前を通る人数のカウントをしたよ。\nコードは<a href=\"https://github.com/maltonn/human-counting\">Github</a>で公開してるよ</p>\n<h2 id=\"タスクと技術選定\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#タスクと技術選定\"><span class=\"icon icon-link\"></span></a>タスクと技術選定</h2>\n<p>メインストリートにカメラを1台置き、その映像のみから人数をカウントします。<br>\n<img src=\"../../assets/blog/003/1.png\" alt=\"image\">\n（開発デバッグ用の映像 / 協力してくれた方ありがとうございました）</p>\n<p>真上からカメラをつるすのは許されず、サーモカメラなどの人の輪郭をとらえやすいカメラも貸し出し許可が下りず、結局普通のカメラを使うことになりました。  また、基本的に複数人が固まって前を通ることを考えると古典的な画像処理だと一筋縄ではいかなさそう....というわけで深層学習ベースの認識手法に舵を切りました。  （偶然にも部内で使ってよいゲーミングノートPCが見つかったことも大きいです）</p>\n<h3 id=\"認識部分\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#認識部分\"><span class=\"icon icon-link\"></span></a>認識部分</h3>\n<p>hugging faceで「human count」「human recognition」とかで検索するもあんまりよい感じのものは見つからず、素直に万能認識モデルを使うことにしました。今回採用したのは<a href=\"https://huggingface.co/hustvl/yolos-tiny\">yolos-tiny</a>です。（これより大きいモデルはGPU1台ではかなり厳しそうだった）</p>\n<p>サンプルコードコピペして適当に編集したところ、完璧ではないにせよ及第点くらいには認識できていたので採用しました。\n<img src=\"../../assets/blog/003/2.png\" alt=\"image\"></p>\n<h3 id=\"カウント部分\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#カウント部分\"><span class=\"icon icon-link\"></span></a>カウント部分</h3>\n<p>認識さえできればあとは単純なアルゴリズムでカウントもできるやろ！と踏んでいたのですが思ったよりつらそう。調べてみると、このタスクに(S)ORT( (Simple) Online and Realtime Tracking )という名前がちゃんとついており、それ専用の研究も進んでいるようです。<br>\nというわけでそれっぽいものを見つけてきて上で実装したものにくっつけました。今回採用したのは<a href=\"https://pypi.org/project/boxmot/\">boxmot.BoTSORT</a>です。pipで入るのが嬉しい。</p>\n<p>やや挙動が怪しいイメージはありましたが、雰囲気は出ていたのでそのまま採用しました。（これは自分が当時別の業務でかなり忙しかったという事情もあります。）</p>\n<p>また、当初検出したユニークなIDをテキストファイルに適宜書き込むという方法でカウントしていましたが、実運用してみると二重検知（同一人物を別フレームで違う人物と認識する）や誤検知（植木を人と認識する）等が目に余ったため、急遽「５フレーム以上移ったものを採用する」という閾値を設定しました。（諸事情あってgithubがアップデートされてないです....）</p>\n<h3 id=\"表示部分\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#表示部分\"><span class=\"icon icon-link\"></span></a>表示部分</h3>\n<p>ボスに「途中結果を見れるようにしてね♡」と言われたので、表示部分を作ります。</p>\n<h4 id=\"サーバー\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#サーバー\"><span class=\"icon icon-link\"></span></a>サーバー</h4>\n<p>Flaskで立てて、リクエストに対して今までのカウント情報（人物IDとタイムスタンプのリスト）を送ります。</p>\n<h4 id=\"クライアント\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#クライアント\"><span class=\"icon icon-link\"></span></a>クライアント</h4>\n<p>10秒おきにfetchしてかえってきたタイムスタンプのリストをうまいことやって表に落とし込みます。（8割くらいcopilotとchatGPTに任せました）</p>\n<h4 id=\"ホスティング\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#ホスティング\"><span class=\"icon icon-link\"></span></a>ホスティング</h4>\n<p>めんどくさかった&#x26;どうせ内部の人間しか見ないのでlocalhostで建てたものをngrokでトンネリングしました。</p>\n<h2 id=\"実践投入\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#実践投入\"><span class=\"icon icon-link\"></span></a>実践投入！</h2>\n<p>評価のため、今回の学園祭では従来通りの手動のカウント係も横において、二重でカウントをしました。結果はこんな感じ\n<img src=\"../../assets/blog/003/graph1.png\" alt=\"時間帯ごとの来場者カウント数\">\n修正したり電源タップが壊れたりで途切れている箇所が何か所かあります。そもそも手動カウントも安定しておらず、結局正しい数値は神のみぞ知る　という状況です。<br>\n自動カウントは、昼間は正確とはいえないまでも人が数えるよりはましかもしれない程度の精度は得られているような気持があります。（数えそこねた分と重複カウントした分が相殺してそれっぽい数字が出てるだけでは？という疑問は残りますが。）<br>\n一方、日が沈むと急激に認識能力が落ちます。まあ、どちみち夜は大した人通りがないので大きな問題ではないという意見もあります。</p>\n<h2 id=\"感想\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#感想\"><span class=\"icon icon-link\"></span></a>感想</h2>\n<p>深層学習を使ったことで、ゲーミングノートパソコンではややフレームレートが心もとなく、トラッキングの精度が想定外に怪しいことになったという反省がありました。できることなら来年以降はカメラをストリートの真上に置くなどして古典的画像処理で数えられるようにしたいところです。後輩たちよ、頼んだぞ。</p>","ogImage":{"url":"/assets/blog/dynamic-routing/cover.jpg"},"coverImage":"/assets/blog/003/thumbnail.png","excerpt":"","tags":["開発","pickup"]}},"__N_SSG":true}