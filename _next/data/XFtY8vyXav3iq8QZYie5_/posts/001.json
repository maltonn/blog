{"pageProps":{"post":{"title":"声から探せるVTuberWiki 開発記","date":"2023-10-16","slug":"001","content":"<h2 id=\"概要\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#概要\"><span class=\"icon icon-link\"></span></a>概要</h2>\n<p>「人の声のembeddingが得られれば、声の近い遠いが定量的にわかるのでは」みたいなアイデアからうまれた「声の地図」を作るWebアプリ<br>\n技育展2023決勝進出作品<br>\n<a href=\"https://vvwiki.vercel.app/\">https://vvwiki.vercel.app/</a>\n<img src=\"../../assets/blog/001/screenshot.png\" alt=\"スクリーンショット\"></p>\n<h2 id=\"やってること\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#やってること\"><span class=\"icon icon-link\"></span></a>やってること</h2>\n<p>Vtuberの配信URLから配信音源をダウンロード → embedding → PCAして画面に表示 みたいなことをしてます<br>\n<a href=\"https://github.com/maltonn/Voice-Vtuber-Wiki-Server\">サーバー側のソースコード</a></p>\n<h3 id=\"speaker-embedding\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#speaker-embedding\"><span class=\"icon icon-link\"></span></a>speaker-embedding</h3>\n<p>ある音声が誰の声かを当てるようなニューラルネットワークを作った時、その中間層には声の特徴をよく表す数値が入っているのではないか　というアプローチで、声のembeddingを取得するモデルが作れます。\n<img src=\"../../assets/blog/001/1.png\" alt=\"pipeline\">\n当初は自前で作っていましたが、最終的にはhugging face の <a href=\"https://huggingface.co/pyannote/embedding\">pyannote/embedding</a>さんを使うことにしました。</p>\n<h3 id=\"音源確保\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#音源確保\"><span class=\"icon icon-link\"></span></a>音源確保</h3>\n<p>YouTubeのURLからyoutube-dlpを用いて音声をダウンロードし、良い感じに切り取ってembeddingに突っ込み、最終的に特徴量ベクトルを得る　という一連のパイプラインを敷きました。\n<img src=\"../../assets/blog/001/2.png\" alt=\"pipeline\">\nやることやってるだけなので技術的な面白みはあまりないですが、やることが多いせいで3日間のハッカソンのうち丸1日がこれにつぶれました。</p>\n<h3 id=\"座標圧縮と表示\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#座標圧縮と表示\"><span class=\"icon icon-link\"></span></a>座標圧縮と表示</h3>\n<p>得られたembeddingは多次元ベクトルなので上手いことディスプレイに落とし込む必要があります。<br>\nいくつか考えましたが、最終的にはPCAで3次元に落としこみ極座標系に変換したのち、<code class=\"language-math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>θ</mi></mrow><annotation encoding=\"application/x-tex\">\\theta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span></span></span></span></code>,<code class=\"language-math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ϕ</mi></mrow><annotation encoding=\"application/x-tex\">\\phi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">ϕ</span></span></span></span></code> 成分を地球儀の座標で、<code class=\"language-math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi></mrow><annotation encoding=\"application/x-tex\">r</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span></span></span></span></code>成分を色で表すことで、地球儀を回す感覚で「声を探せる」体験の実現を試みました。ある程度はそれっぽい分布になる一方で、（メルカトル図法の地図と同じく）北極側がスカスカになってしまうという問題点があり、改良の必要がありそうです。</p>\n<h3 id=\"フロントエンド\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#フロントエンド\"><span class=\"icon icon-link\"></span></a>フロントエンド</h3>\n<p><a href=\"https://github.com/maltonn/Voice-Vtuber-Wiki-Client\">クライアント側のソースコード</a><br>\nNext.js + React + (申し訳程度の) tailwind.css で作りました。機能自体は非常にシンプルなので、コード量としては大したことはないです。</p>","ogImage":{"url":"/assets/blog/001/thumbnail.png"},"coverImage":"/assets/blog/001/thumbnail.png","excerpt":"","tags":["開発","pickup"]}},"__N_SSG":true}