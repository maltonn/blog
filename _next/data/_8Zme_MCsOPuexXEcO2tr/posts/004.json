{"pageProps":{"post":{"title":"サークルのシフトを線形最適化で決める","date":"2023-11-22","slug":"004","content":"<h2 id=\"tldr\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#tldr\"><span class=\"icon icon-link\"></span></a>TL;DR</h2>\n<p>数理最適化を用いてシフトスケジューリング問題を解いたよ。多くの要望を考慮したシフトをシステマティックに作成することができたよ。</p>\n<h2 id=\"はじめに\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#はじめに\"><span class=\"icon icon-link\"></span></a>はじめに</h2>\n<p>所属サークルの一つである大阪大学お嬢様部が学祭に出店することになり、そのシフト担当になりました。\nというわけで、前からやってみたかったシフトスケジューリング問題の実践投入をしてみました。<br>\nなお、個人情報保護や説明のしやすさの観点から、一部詳細を変更しています。</p>\n<h2 id=\"お嬢様部とは\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#お嬢様部とは\"><span class=\"icon icon-link\"></span></a>お嬢様部とは</h2>\n<p>もともとはtwitter上で語尾に「～ですわ」を付けるだけの小規模ネットミームでしたが、とある阪大生が「本当にサークルとして存在したら面白くね？」と思いついて大阪大学お嬢様部が生まれました。順調に運営が続き、現在アクティブ部員30名越えの中堅サークルにまで発展しています。大阪大学お嬢様部について詳しくは<a href=\"https://twitter.com/OU_ojousamaclub\">Twitter</a> もしくは <a href=\"https://ou-ojousamaclub.com/\">公式ホームページ</a>をご覧ください。<br>\n余談ですが弊大学以外の名を冠したお嬢様部もたくさん存在します。よかったら調べてみてください。</p>\n<h2 id=\"線形最適化線形計画法とは\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#線形最適化線形計画法とは\"><span class=\"icon icon-link\"></span></a>線形最適化(線形計画法)とは</h2>\n<p><code class=\"language-math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><msub><mi>a</mi><mn>2</mn></msub><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><msub><mi>a</mi><mi>n</mi></msub><msub><mi>x</mi><mi>n</mi></msub><mo>≤</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">a_1x_1+a_2x_2+....a_nx_n \\leq b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.786em;vertical-align:-0.15em;\"></span><span class=\"mord\">....</span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span></code><br>\nという条件（複数あってもよい）のもとで<br>\n<code class=\"language-math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>E</mi><mo>=</mo><msub><mi>c</mi><mn>1</mn></msub><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><msub><mi>c</mi><mn>2</mn></msub><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><msub><mi>c</mi><mi>m</mi></msub><msub><mi>x</mi><mi>m</mi></msub></mrow><annotation encoding=\"application/x-tex\">E= c_1x_1+c_2x_2+...c_mx_m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\">...</span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></code><br>\nを最小化する問題を解くことです。<br>\nNP困難な問題ですが、単体法・内点法などのヒューリスティックアルゴリズムで現実的に高速に解くことができます。</p>\n<p>なお、一部の変数が整数でなければならないという制約があると「混合整数線形計画問題（MIP）」と呼ばれる問題となり、今回もこれにあたります。 具体的にシフトをどのように不等式に落とし込むかは後述。</p>\n<h2 id=\"前提知識\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#前提知識\"><span class=\"icon icon-link\"></span></a>前提知識</h2>\n<p>弊サークルでは部員がロールプレイをしてお客様をもてなすのですが、それゆえ、少し複雑な要件があります。\n<img src=\"../../assets/blog/004/1.png\" alt=\"部員-ロール-ポジションの関係\">\n部員にはそれぞれ、ロールの希望とポジションの希望があり、また、企画のコンセプトとして「このポジションにはこのロールを当てたい」というような運営側の希望があります。さらに、【この時間は全員が執事です】みたいな時間が出来ちゃうとギャグなので避けたい、というようなアンチパターンがいくつかあり考慮に入れる必要があります。<br>\n人の手でこれらを総合してうまいこと組むのは至難の業であり、ここで数理最適化の強みが出ます。</p>\n<h2 id=\"開発\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#開発\"><span class=\"icon icon-link\"></span></a>開発</h2>\n<h3 id=\"データの用意\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#データの用意\"><span class=\"icon icon-link\"></span></a>データの用意</h3>\n<p>Google Form でシフト希望アンケートを取ったのち、Excelに落とし込みます。ポジション/ロールの希望については選択式なので簡単ですが、時間の希望については自由記述を定型データに落とし込む必要がありそれなりに骨が折れる作業でした。次回以降の課題の一つです。\n<img src=\"../../assets/blog/004/2.png\" alt=\"希望調査表\">\n時間/ロール/ポジションの希望調査に運営から聞いたレギュレーションを追加して4つの表が出来上がりました。<br>\nなお、実際には30部員・20時間（40コマ）・13ポジション・4ロールを扱う必要があり、それなりに大きな表になります。</p>\n<h3 id=\"コストの定義\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#コストの定義\"><span class=\"icon icon-link\"></span></a>コストの定義</h3>\n<p>pandasにはExcelの表を読みだしてそのままDataFrameにしてくれる機能があります。そこからさらにndarrayに変換して、○△×を適切なコストで置換してやれば<code class=\"language-math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>W</mi><mi>P</mi><mo stretchy=\"false\">[</mo><mtext>部員番号</mtext><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mtext>ポジション</mtext><mi>I</mi><mi>D</mi><mo stretchy=\"false\">]</mo><mo>=</mo><mtext>コスト</mtext></mrow><annotation encoding=\"application/x-tex\">WP[部員番号][ポジションID]=コスト</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">[</span><span class=\"mord cjk_fallback\">部員番号</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord cjk_fallback\">ポジション</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord cjk_fallback\">コスト</span></span></span></span></code>となるようなコスト表が出来上がります。他の要素についても同様。<br>\n後から出てきますが、シフト計画はこれらの合計を最小化するように立てるので、【〇】のコストを小さく、【×】のコストを大きくするのが良いです。</p>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\nWP_df <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_excel<span class=\"token punctuation\">(</span><span class=\"token string\">'data.xlsx'</span><span class=\"token punctuation\">,</span> index_col<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>sheet_name<span class=\"token operator\">=</span><span class=\"token string\">'ポジション'</span><span class=\"token punctuation\">)</span>\nWP <span class=\"token operator\">=</span> WP_df<span class=\"token punctuation\">.</span>values\nWP<span class=\"token punctuation\">[</span>WP<span class=\"token operator\">==</span><span class=\"token string\">\"〇\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">1</span>\nWP<span class=\"token punctuation\">[</span>WP<span class=\"token operator\">==</span><span class=\"token string\">\"△\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">10</span>\nWP<span class=\"token punctuation\">[</span>WP<span class=\"token operator\">==</span><span class=\"token string\">\"×\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">10000000</span>\n</code></pre>\n<p>これらの積を取って、部員・ポジション・ロール・時間が与えられたときのコスト行列を定義します。\nやや効率の悪いやり方をしているように思えますが、せいぜい部員×ポジション×時間の<code class=\"language-math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>4</mn></msup></mrow><annotation encoding=\"application/x-tex\">10^4</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\">1</span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span></span></span></span></span></span></span></span></span></code>オーダーしか回らないこと、実際には細かい要望に合わせてcost関数を変更する必要があること等が理由でこの形に落ち着きました。</p>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">cost</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>WT<span class=\"token punctuation\">[</span>w<span class=\"token punctuation\">,</span>t<span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>self<span class=\"token punctuation\">.</span>WP<span class=\"token punctuation\">[</span>w<span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>self<span class=\"token punctuation\">.</span>RP<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">]</span>\n\nWPT<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>wnum<span class=\"token punctuation\">,</span>self<span class=\"token punctuation\">.</span>pnum<span class=\"token punctuation\">,</span>self<span class=\"token punctuation\">.</span>tnum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> w <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>wnum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> p <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>pnum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> t <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>tnum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            WPT<span class=\"token punctuation\">[</span>w<span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">,</span>t<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>cost<span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">,</span>role_WD<span class=\"token punctuation\">[</span>w<span class=\"token punctuation\">,</span>self<span class=\"token punctuation\">.</span>time2day<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>t<span class=\"token punctuation\">)</span>\n\n</code></pre>\n<p>目ざとい読者はお気づきかもしれませんが、コスト行列にロール要素が含まれていません。これは、当初WPRTの4軸で実装したところ変数と条件の数があまりに多く一向に有効解が見つからなかったため、諦めてロールを決め打ちしたという事情があります。（role_WDがこれにあたり、<code>role_WD[部員番号,企画日何日目か] = その日のロール</code>）なる行列をあらかじめ定義しました。）</p>\n<h3 id=\"モデルの作成と変数定義と\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#モデルの作成と変数定義と\"><span class=\"icon icon-link\"></span></a>モデルの作成と変数定義と</h3>\n<p>python-MIPを使ってモデルと変数を作ります。\n（説明の見やすさのため、変数名を一文字にしていますが実際は<code>var_WPT</code>みたいな名前を付けてます。命名のベストプラクティスはなんも分らん）</p>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> mip\nm<span class=\"token operator\">=</span>mip<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">(</span><span class=\"token string\">\"ShiftScheduling\"</span><span class=\"token punctuation\">)</span>\n\nX<span class=\"token operator\">=</span>m<span class=\"token punctuation\">.</span>add_var_tensor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>wnum<span class=\"token punctuation\">,</span>pnum<span class=\"token punctuation\">,</span>tnum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>name<span class=\"token operator\">=</span><span class=\"token string\">\"worker-place-time\"</span><span class=\"token punctuation\">,</span>var_type<span class=\"token operator\">=</span><span class=\"token string\">\"B\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>python-MIPではadd_var_tensorメソッドによって多次元配列の変数集合を作ることができます。\n今回は 部員番号を<code class=\"language-math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>w</mi></mrow><annotation encoding=\"application/x-tex\">w</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span></span></span></code>,ポジション番号を<code class=\"language-math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span></code>,時間セクション番号を<code class=\"language-math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6151em;\"></span><span class=\"mord mathnormal\">t</span></span></span></span></code>として、<code class=\"language-math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo stretchy=\"false\">[</mo><mi>w</mi><mo separator=\"true\">,</mo><mi>p</mi><mo separator=\"true\">,</mo><mi>t</mi><mo stretchy=\"false\">]</mo><mo>=</mo><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.36em\" columnalign=\"left left\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>その部員がその時間にそのポジションに入る場合</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>otherwise</mtext></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding=\"application/x-tex\">X[w,p,t] = \\begin{cases} 1 &#x26; \\text{その部員がその時間にそのポジションに入る場合} \\\\0 &#x26; \\text{otherwise}\\end{cases}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3em;vertical-align:-1.25em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">{</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.69em;\"><span style=\"top:-3.69em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.19em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:1em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.69em;\"><span style=\"top:-3.69em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord cjk_fallback\">その部員がその時間にそのポジションに入る場合</span></span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">otherwise</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.19em;\"><span></span></span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></code>  なる変数行列をつくりました。これにより、各種条件をシンプルに書くことが可能になります。　　</p>\n<h3 id=\"目的関数\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#目的関数\"><span class=\"icon icon-link\"></span></a>目的関数</h3>\n<p>各セルのコストと変数が決まったため、線形計画問題に落とし込む準備ができました。\n今回は<code>E= X*SC.WPT</code>の合計値の最小化を目指します。これはすなわち、<code>X[w,p,t]==1</code>となる（＝部員<code>w</code>がポジション<code>p</code>、時刻<code>t</code>でポジションに入るときの）<code>w,p,t</code>のコストの合計値を最小化する事と同義です。</p>\n<pre class=\"language-python\"><code class=\"language-python\">m<span class=\"token punctuation\">.</span>objective <span class=\"token operator\">=</span> mip<span class=\"token punctuation\">.</span>minimize<span class=\"token punctuation\">(</span>mip<span class=\"token punctuation\">.</span>xsum<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>X<span class=\"token operator\">*</span>SC<span class=\"token punctuation\">.</span>WPT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>flatten<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3 id=\"制約条件\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#制約条件\"><span class=\"icon icon-link\"></span></a>制約条件</h3>\n<p>このままでは、「全時間誰も入らないのがコスト0で一番いいね！」となってしまします。そういうわけにはいかないので、必要な制約条件を追加してきます。\npython-MIPでは<code>m+=条件</code>という形で制約条件を追加することができます。かなり思いきった演算子オーバーロードです。</p>\n<h4 id=\"どの時間もどの場所もちゃんとシフトの人を入れる\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#どの時間もどの場所もちゃんとシフトの人を入れる\"><span class=\"icon icon-link\"></span></a>どの時間もどの場所もちゃんとシフトの人を入れる</h4>\n<p>「すべての時間tとポジションpについて、w方向に圧縮した場合（部員を問わない場合）常に1となる」と読みかえて式に落とします。</p>\n<pre class=\"language-python\"><code class=\"language-python\">  <span class=\"token keyword\">for</span> t <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>tnum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">for</span> p <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>pnum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n          m <span class=\"token operator\">+=</span> mip<span class=\"token punctuation\">.</span>xsum<span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">,</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span>\n</code></pre>\n<h4 id=\"一人二役の禁止\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#一人二役の禁止\"><span class=\"icon icon-link\"></span></a>一人二役の禁止</h4>\n<p>ある時間に同じ人が異なる2か所のポジションに入ってしまうと大変なことになります。制約条件として「任意の時間t,部員wについて<code>X[w,p,t]=1</code>なるpは最大一つ」⇔「p方向に圧縮した合計値が1以下」を追加します。</p>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> t <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>tnum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> w <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>wnum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        m <span class=\"token operator\">+=</span> mip<span class=\"token punctuation\">.</span>xsum<span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">[</span>w<span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&#x3C;=</span> <span class=\"token number\">1</span>\n</code></pre>\n<h3 id=\"完成\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#完成\"><span class=\"icon icon-link\"></span></a>完成！</h3>\n<p>破綻のないシフト計画が完成しました！<br>\n（実際のシフトは個人情報保護のため割愛）</p>\n<h2 id=\"要望とかに答えるフェーズ\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#要望とかに答えるフェーズ\"><span class=\"icon icon-link\"></span></a>要望とかに答えるフェーズ</h2>\n<p>出来上がったシフト表をよく見ると色々と文句の付け所があることに気づきます。この節では文句/要望とそれにどう対応したかを紹介します。</p>\n<h3 id=\"全員執事みたいなギャグを避けるために\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#全員執事みたいなギャグを避けるために\"><span class=\"icon icon-link\"></span></a>「全員執事」みたいなギャグを避けるために</h3>\n<p>任意の時間で、どこかのポジションはお嬢様ロールが入っていなくてはならないという制約を追加します。お嬢様ロールの部員のみを抜き取って、時間を固定したときの合計が1以上になればよいです。</p>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> t <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>tnum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    ojousama_lst<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>w <span class=\"token keyword\">for</span> w <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>wnum<span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> role_WD<span class=\"token punctuation\">[</span>w<span class=\"token punctuation\">,</span>t2d<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span>ridx<span class=\"token punctuation\">(</span><span class=\"token string\">\"お嬢様\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n    m<span class=\"token operator\">+=</span>mip<span class=\"token punctuation\">.</span>xsum<span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">[</span>ojousama_lst<span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>flatten<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">>=</span><span class=\"token number\">1</span>\n</code></pre>\n<p>リストをインデックスにできるnumpy式スライシングの便利さに感動。</p>\n<h3 id=\"連続時間制約\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#連続時間制約\"><span class=\"icon icon-link\"></span></a>連続時間制約</h3>\n<p>機械は感情がないので、「部員によっては1日中休憩なし」みたいな血も涙もないシフトを出してきます。そこで、3時間以上連続でシフトに入れることを禁止する制約を付けます。\n30分1コマなので任意の時刻<code>t</code>において<code>t</code>から<code>t+6</code>までの合計値が5以下であればよいです。</p>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> w <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>wnum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> t <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>tnum<span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        m<span class=\"token operator\">+=</span>mip<span class=\"token punctuation\">.</span>xsum<span class=\"token punctuation\">(</span>var_WPT<span class=\"token punctuation\">[</span>w<span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span>t<span class=\"token punctuation\">:</span>t<span class=\"token operator\">+</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>flatten<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&#x3C;=</span><span class=\"token number\">5</span>\n</code></pre>\n<h3 id=\"さんだけ働かせすぎじゃない問題\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#さんだけ働かせすぎじゃない問題\"><span class=\"icon icon-link\"></span></a>○○さんだけ働かせすぎじゃない？問題</h3>\n<p>シフト時間ができるだけ公平になるような制約/目的関数を追加します。<br>\nできるだけ公平と聞いてまず思いつくのは分散最小化ですが、これはXについての2次式となり、目的関数や制約条件に落とし込むことができません。そこで、「最もシフトに長くいる人のシフト入り時間の最小化」をすることで、不公平に働きすぎる人を抑えようというアプローチをとります。<br>\n最小値の最大化は線形計画法の鉄板テクニックで、新たな中間変数zを用意して<br>\n<code class=\"language-math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>minimize: </mtext><mi>max</mi><mo>⁡</mo><mrow><mo stretchy=\"false\">(</mo><msub><mi>Y</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\text{minimize: } \\max{(Y_n)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">minimize: </span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">max</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></code><br>\n<code class=\"language-math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⇔</mo><mtext>minimize: </mtext><mi>z</mi><mtext> subject to </mtext><msub><mi>Y</mi><mi>n</mi></msub><mo>≤</mo><mi>z</mi><mtext> for all </mtext><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">\\Leftrightarrow \\text{minimize: } z \\text{ subject to } Y_n \\leq z \\text{ for all } n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.3669em;\"></span><span class=\"mrel\">⇔</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord text\"><span class=\"mord\">minimize: </span></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mord text\"><span class=\"mord\"> subject to </span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mord text\"><span class=\"mord\"> for all </span></span><span class=\"mord mathnormal\">n</span></span></span></span></code><br>\nと読み替えることで線形式に落とし込めます。</p>\n<pre class=\"language-python\"><code class=\"language-python\">z<span class=\"token operator\">=</span>m<span class=\"token punctuation\">.</span>add_var<span class=\"token punctuation\">(</span>name<span class=\"token operator\">=</span><span class=\"token string\">\"max_shift_time\"</span><span class=\"token punctuation\">,</span>var_type<span class=\"token operator\">=</span><span class=\"token string\">\"I\"</span><span class=\"token punctuation\">)</span>\nm<span class=\"token punctuation\">.</span>objective <span class=\"token operator\">=</span> mip<span class=\"token punctuation\">.</span>minimize<span class=\"token punctuation\">(</span>\n                  mip<span class=\"token punctuation\">.</span>xsum<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>X<span class=\"token operator\">*</span>SC<span class=\"token punctuation\">.</span>WPT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>flatten<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> \n                <span class=\"token operator\">+</span> z <span class=\"token comment\">#新たに導入する中間変数</span>\n                <span class=\"token punctuation\">)</span> \n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token keyword\">for</span> w <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>wnum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    m <span class=\"token operator\">+=</span> mip<span class=\"token punctuation\">.</span>xsum<span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">[</span>w<span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>flatten<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&#x3C;=</span> z\n</code></pre>\n<p>また、重みを付けて一部の部員の制限を緩くしたり厳しくしたりもできます。</p>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> w <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>wnum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    r<span class=\"token operator\">=</span><span class=\"token number\">1</span>\n    <span class=\"token keyword\">if</span> w<span class=\"token operator\">==</span><span class=\"token number\">3</span><span class=\"token punctuation\">:</span> \n        r<span class=\"token operator\">=</span><span class=\"token number\">1.2</span> <span class=\"token comment\">#少し多めに働ける</span>\n    m <span class=\"token operator\">+=</span> mip<span class=\"token punctuation\">.</span>xsum<span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">[</span>w<span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>flatten<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&#x3C;=</span> r<span class=\"token operator\">*</span>z\n</code></pre>\n<h3 id=\"交代が多すぎる問題\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#交代が多すぎる問題\"><span class=\"icon icon-link\"></span></a>交代が多すぎる問題</h3>\n<p>30分単位でコマを取ったことで、30分単位で次々と部員が入れ替わるシフトが出来上がりました。誰も得しないので、最低連続1時間くらいは入るようにしたいなという気持ちがあり、それを制約に加えます。\n具体的には <code class=\"language-math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>−</mo><msub><mi>X</mi><msub><mi>t</mi><mi>n</mi></msub></msub><mo>+</mo><msub><mi>X</mi><msub><mi>t</mi><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msub></msub><mo>−</mo><msub><mi>X</mi><msub><mi>t</mi><mrow><mi>n</mi><mo>+</mo><mn>2</mn></mrow></msub></msub><mo>≤</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">-X_{t_n}+X_{t_{n+1}}-X_{t_{n+2}} \\leq 0 </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9334em;vertical-align:-0.2501em;\"></span><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2501em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9751em;vertical-align:-0.2918em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2025em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2918em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9751em;vertical-align:-0.2918em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2025em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2918em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span></code> を制約に入れることで 0-1-0 の組み合わせを取る連続する3コマを禁止できます。</p>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> t <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>tnum<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> w <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>wnum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> p <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>pnum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            m <span class=\"token operator\">+=</span> <span class=\"token operator\">-</span>var_WPT<span class=\"token punctuation\">[</span>w<span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">,</span>t<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>var_WPT<span class=\"token punctuation\">[</span>w<span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">,</span>t<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>var_WPT<span class=\"token punctuation\">[</span>w<span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">,</span>t<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">&#x3C;=</span><span class=\"token number\">0</span>\n            <span class=\"token keyword\">if</span> t<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token comment\">#最初の場合、追加で1,0を禁止</span>\n                m <span class=\"token operator\">+=</span> var_WPT<span class=\"token punctuation\">[</span>w<span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">,</span>t<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>var_WPT<span class=\"token punctuation\">[</span>w<span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">,</span>t<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">&#x3C;=</span><span class=\"token number\">0</span>\n</code></pre>\n<h3 id=\"いろんなポジションにつきたい--できるだけ1つのポジションでいたい\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#いろんなポジションにつきたい--できるだけ1つのポジションでいたい\"><span class=\"icon icon-link\"></span></a>いろんなポジションにつきたい / できるだけ1つのポジションでいたい</h3>\n<p>両意見出ました。個別にアンケートを取って、それぞれ対応します。</p>\n<h4 id=\"いろんなポジションにつきたい\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#いろんなポジションにつきたい\"><span class=\"icon icon-link\"></span></a>いろんなポジションにつきたい</h4>\n<p>新たに<code>Y[部員,ポジション]=そのポジションに入ることが1度でもあるか</code>のバイナリ変数行列を作成し、その合計値を目的関数に加えます。目的関数は最小化したい一方、これは大きいほど（多くの種類のポジションに入れるほど）嬉しいため、係数にマイナスがつきます。</p>\n<pre class=\"language-python\"><code class=\"language-python\">Y<span class=\"token operator\">=</span>m<span class=\"token punctuation\">.</span>add_var_tensor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>wnum<span class=\"token punctuation\">,</span>pnum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>name<span class=\"token operator\">=</span><span class=\"token string\">\"in_WP\"</span><span class=\"token punctuation\">,</span>var_type<span class=\"token operator\">=</span><span class=\"token string\">\"B\"</span><span class=\"token punctuation\">)</span>\nm<span class=\"token punctuation\">.</span>objective <span class=\"token operator\">=</span> mip<span class=\"token punctuation\">.</span>minimize<span class=\"token punctuation\">(</span>\n    <span class=\"token comment\">#省略</span>\n    <span class=\"token operator\">-</span>mip<span class=\"token punctuation\">.</span>xsum<span class=\"token punctuation\">(</span>Y<span class=\"token punctuation\">.</span>flatten<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># きるだけたくさんの場所に入れたい</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\nwnames<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"アリス\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"キャロル\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> w <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span>widx<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> wnames<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span><span class=\"token comment\"># widx()は部員名を入力して部員番号を出力</span>\n    <span class=\"token keyword\">for</span> p <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>pnum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        m<span class=\"token operator\">+=</span>mip<span class=\"token punctuation\">.</span>xsum<span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">[</span>w<span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">>=</span>Y<span class=\"token punctuation\">[</span>w<span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">]</span> \n</code></pre>\n<p><code>w</code>が希望者かつ<code>X[w,p,:] </code>に一つも1が立っていない場合（=そのポジションに1度も入らない場合）のみ、<code>sum(X[w,p,:])=0</code>となるので<code>Y[w,p]=0</code>になります。逆に、それ以外では<code>sum(Y[w,p])</code>を最大化する圧力がかかるため、<code>Y[w,p]=1</code>となります。</p>\n<h4 id=\"できるだけ1つのポジションでいたい\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#できるだけ1つのポジションでいたい\"><span class=\"icon icon-link\"></span></a>できるだけ1つのポジションでいたい</h4>\n<p><code>Y2[部員,ポジション]=そのポジションに入ることが1度でもあるか</code>のバイナリ変数行列を作成します。（<code>Y1</code>と異なり、こちらは目的関数に入れません）</p>\n<pre class=\"language-python\"><code class=\"language-python\">Y2<span class=\"token operator\">=</span>m<span class=\"token punctuation\">.</span>add_var_tensor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>wnum<span class=\"token punctuation\">,</span>pnum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>name<span class=\"token operator\">=</span><span class=\"token string\">\"in_WP\"</span><span class=\"token punctuation\">,</span>var_type<span class=\"token operator\">=</span><span class=\"token string\">\"B\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\nwnames<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"ボブ\"</span><span class=\"token punctuation\">]</span>\nM<span class=\"token operator\">=</span><span class=\"token number\">99999</span>\n<span class=\"token keyword\">for</span> w <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span>widx<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> wnames<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> p <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>SC<span class=\"token punctuation\">.</span>pnum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n          m<span class=\"token operator\">+=</span>mip<span class=\"token punctuation\">.</span>xsum<span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">[</span>w<span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&#x3C;=</span>M<span class=\"token operator\">*</span>Y2<span class=\"token punctuation\">[</span>w<span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">]</span>\n      m<span class=\"token operator\">+=</span>mip<span class=\"token punctuation\">.</span>xsum<span class=\"token punctuation\">(</span>Y2<span class=\"token punctuation\">[</span>w<span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">1</span>\n\n</code></pre>\n<p><code>X[w,p,:] </code>に一つも1が立っていない場合、<code>sum(X[w,p,:])=0</code>より、<code>Y2[w,p]</code>は自由に値を取ることができます。逆に、1つでも1が立っている場合、<code>Y2[w,p]=0</code>では条件を満たさないので、<code>Y2[w,p]=1</code>と確定します。<br>\n各部員ごとに<code>p</code>方向に圧縮した合計をとることによって、その部員が入るポジションの種類の上限を決めることが可能になります。（下限は決まらないことに注意。<code>sum(X[w,p,:])=0</code>だが<code>Y2[w,p]=1</code>なる変数の取り方は違法ではないため）</p>\n<h3 id=\"特定時刻にのみ必要なシフト\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#特定時刻にのみ必要なシフト\"><span class=\"icon icon-link\"></span></a>特定時刻にのみ必要なシフト</h3>\n<p>特定時刻にのみ必要なシフトの存在が発覚しました。色々考えた結果、別途「この時間にこのポジションのシフトが必要かどうか」の表をExcelで作り、「どの時間もどの場所もちゃんとシフトの人を入れる」制約をそれに合わせて変更する方針を取りました。</p>\n<pre class=\"language-python\"><code class=\"language-python\">NeedsWorker<span class=\"token operator\">=</span>pd<span class=\"token punctuation\">.</span>read_excel<span class=\"token punctuation\">(</span><span class=\"token string\">'data.xlsx'</span><span class=\"token punctuation\">,</span> index_col<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>sheet_name<span class=\"token operator\">=</span><span class=\"token string\">'必要人数'</span><span class=\"token punctuation\">)</span> \n\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token keyword\">for</span> t <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>tnum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> p <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>pnum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        m <span class=\"token operator\">+=</span> mip<span class=\"token punctuation\">.</span>xsum<span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">,</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span>NeedsWorker<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">,</span>t<span class=\"token punctuation\">]</span>\n</code></pre>\n<p>これにより、「朝の時間だけビラを配る」「企画全体でお昼休憩を取りたい（が来たお客さん向けに外に案内役が一人必要）」等の要望をかなえることができました。</p>\n<h3 id=\"のポジションはベテランの部員にしか任せられない\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#のポジションはベテランの部員にしか任せられない\"><span class=\"icon icon-link\"></span></a>○○のポジションはベテランの部員にしか任せられない</h3>\n<p>「任せられない」も「希望しない」も内部的には同じであることを利用してシフト希望調査の希望度を改ざんすることで事なきを得ました。</p>\n<h2 id=\"定式化できなかった要望\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#定式化できなかった要望\"><span class=\"icon icon-link\"></span></a>定式化できなかった要望</h2>\n<h3 id=\"立ち仕事は連続すると疲れるので適度に座り仕事を入れてほしい\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#立ち仕事は連続すると疲れるので適度に座り仕事を入れてほしい\"><span class=\"icon icon-link\"></span></a>立ち仕事は連続すると疲れるので、適度に座り仕事を入れてほしい</h3>\n<p>気持ちが分かる一方でややあいまいな要望であり、「立ち仕事か座り仕事か」フラグを導入するのも面倒だったので最後に自分が確認して「ヨシ！」をやりました。</p>\n<h3 id=\"3日間のシフトのうち1日は完全フリーにしてほしい\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#3日間のシフトのうち1日は完全フリーにしてほしい\"><span class=\"icon icon-link\"></span></a>3日間のシフトのうち、1日は完全フリーにしてほしい</h3>\n<p>目視で人が余っていそうな日を選び、その人のその日の希望をすべて【×】にすることで解決しました。<br>\nこの記事を書いてる間に気づいたのですが、「できるだけ1つのポジションでいたい」と同じ方針で「シフトが1コマ以上入っている日が2日以内」という制約が書けます。</p>\n<h3 id=\"ゆっくり来るか早く帰るかしたいのでシフトはどこかに固めてほしい--学祭を見て回りたいので長い休みが欲しい\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#ゆっくり来るか早く帰るかしたいのでシフトはどこかに固めてほしい--学祭を見て回りたいので長い休みが欲しい\"><span class=\"icon icon-link\"></span></a>ゆっくり来るか早く帰るかしたいのでシフトはどこかに固めてほしい / 学祭を見て回りたいので長い休みが欲しい</h3>\n<p>目視でそれっぽいところの希望を【x】にすることで解決（？）。<br>\n具体的に何時間かが分からない（他部員のシフト状況に依存する）ため、定式化できなかったです。何か良い方法があれば教えてください。</p>\n<h2 id=\"その他技術的なこと\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#その他技術的なこと\"><span class=\"icon icon-link\"></span></a>その他技術的なこと</h2>\n<h3 id=\"制約で書くか大きいコストを入れるか\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#制約で書くか大きいコストを入れるか\"><span class=\"icon icon-link\"></span></a>制約で書くか大きいコストを入れるか</h3>\n<p>【×】と希望を出した時間やポジションは原則として入れないルールがありますが、これを実現するには2つの方法があります。\n①制約条件として、【×】と希望を出したセルにビットが立つのを禁止する<br>\n②非常に大きいコストを入れて目的関数を最小化する過程ではじいてもらう<br>\n要は、変数が増えるのと制約が増えるので（or 2段階単体法の1段目が厳しい場合と2段目が厳しい場合とで（？））どちらが負担が少ないかという問題なのですが、双対問題に切り替わると変数と制約の数が逆転する上、そもそもoptmizerの内部でゴリゴリに最適化がかかっているためどちらが良いと一概に言える感じではなさそうです。体感としても、①のほうが早いタイミングと②のほうが早いタイミングがあり、ちゃんとした結論は出ませんでした。この辺の話に詳しい人がいたら教えていただきたいです。</p>\n<h2 id=\"おわりに\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#おわりに\"><span class=\"icon icon-link\"></span></a>おわりに</h2>\n<p>今回、数理最適化を使って現実の問題を解くということを初めて行いました。泥臭い調整が多く結構大変だったものの、楽しく開発できました。給与の発生しないボランティアの中、「すべての要望を通すと企画が成立しなくなる」というような心配をしていましたが、無事ちゃんと回るシフトができて安心しました。部員の皆さん、ご協力ありがとうございました。</p>\n<p>一方、システム的にいくつか反省点があり、<br>\n・要望が出るたびにコードを追加する必要があり、結果としてかなりの工数になったことに加え、他の人と分担することもできなかった（ほとんどの部員はコードが書けないため）。<br>\n・定式化できない要望や、最後の細かい調整などで結果的に出来上がったシフト表に手を加える必要があった。<br>\n・当日の体調不良に対して、代替が誰もいない　というような状況が起こった。<br>\n・当日シフト担当者がダウンした際（案の定これが起こったのですが）のオペレーションが何も決まっておらず、上記の問題と合わせて現場の混乱のもとになった。<br>\n等々、次回に向けた課題としたいです。</p>","ogImage":{"url":"/assets/blog/004/thumbnail.png"},"coverImage":"/assets/blog/004/thumbnail.png","excerpt":"python-MIPを用いたシフトスケジューリング最適化","tags":["開発","pickup"]}},"__N_SSG":true}